'use client';

import React, { useEffect, useState } from 'react';
import { useRouter, useSearchParams } from 'next/navigation';
import { motion } from 'framer-motion';
import { CheckCircle, CreditCard, Calendar } from 'lucide-react';
import Link from 'next/link';

export default function SignupSuccess() {
  const router = useRouter();
  const searchParams = useSearchParams();
  const sessionId = searchParams.get('session_id');
  const [verifying, setVerifying] = useState(true);
  const [tenant, setTenant] = useState(null);
  const [user, setUser] = useState(null);
  const [error, setError] = useState('');

  useEffect(() => {
    if (sessionId) {
      verifySession();
    } else {
      setError('No session ID provided');
      setVerifying(false);
    }
  }, [sessionId]);

  const verifySession = async () => {
    try {
      // Get registration data from session storage (stored during payment process)
      const storedRegistrationData = sessionStorage.getItem('partnerRegistrationData');
      
      const response = await fetch('/api/stripe/verify-session', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
          sessionId,
          registrationData: storedRegistrationData ? JSON.parse(storedRegistrationData) : null
        }),
      });

      const data = await response.json();

      if (response.ok) {
        setTenant(data.tenant);
        setUser(data.user);
        const userId = data.user?.id;
        const email = data.user?.email || '';
        
        // Email verification disabled - partners go directly to dashboard
        console.log(' Payment verified - partner can access dashboard immediately');
        
        // Store user data for manual navigation (no auto-redirect)
        // User must click "Go to Dashboard" button to proceed
      } else {
        setError(data.error || 'Failed to verify payment');       
      }
    } catch (error) {
      setError('An error occurred while verifying your payment'); 
    } finally {
      setVerifying(false);
    }
  };

  if (verifying) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-50 to-blue-50/30">                  
        <motion.div
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          className="bg-white rounded-2xl shadow-xl p-8 max-w-md w-full mx-4"                                                       
        >
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>                     
            <h2 className="text-xl font-semibold text-gray-900 mb-2">Verifying Payment</h2>                                         
            <p className="text-gray-600">Please wait while we confirm your subscription...</p>                                      
          </div>
        </motion.div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-50 to-blue-50/30">                  
        <motion.div
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          className="bg-white rounded-2xl shadow-xl p-8 max-w-md w-full mx-4"                                                       
        >
          <div className="text-center">
            <div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">                       
              <svg className="w-8 h-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">                          
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />                      
              </svg>
            </div>
            <h2 className="text-xl font-semibold text-gray-900 mb-2">Payment Verification Failed</h2>                               
            <p className="text-gray-600 mb-6">{error}</p>
            <Link
              href="/auth/register/partner"
              className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700"                                        
            >
              Try Again
            </Link>
          </div>
        </motion.div>
      </div>
    );
  }

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-50 to-blue-50/30 py-12 px-4">         
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        className="max-w-2xl w-full bg-white rounded-2xl shadow-xl p-8"                                                             
      >
        <div className="text-center mb-8">
          <motion.div
            initial={{ scale: 0 }}
            animate={{ scale: 1 }}
            transition={{ delay: 0.2, type: "spring", stiffness: 200 }}                                                             
            className="w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6"                           
          >
            <CheckCircle className="w-10 h-10 text-green-600" />  
          </motion.div>

          <motion.h1
            initial={{ y: 20, opacity: 0 }}
            animate={{ y: 0, opacity: 1 }}
            transition={{ delay: 0.3 }}
            className="text-3xl font-bold text-gray-900 mb-2"     
          >
            Welcome to LocalPerks!
          </motion.h1>

          <motion.p
            initial={{ y: 20, opacity: 0 }}
            animate={{ y: 0, opacity: 1 }}
            transition={{ delay: 0.4 }}
            className="text-lg text-gray-600"
          >
            Payment successful! Your partner account has been created and is pending admin approval. Complete mobile verification below to proceed.
          </motion.p>
        </div>

        {tenant && (
          <motion.div
            initial={{ y: 20, opacity: 0 }}
            animate={{ y: 0, opacity: 1 }}
            transition={{ delay: 0.5 }}
            className="bg-gray-50 rounded-xl p-6 mb-8"
          >
            <h3 className="text-lg font-semibold text-gray-900 mb-4">Account Details</h3>                                           
            <div className="space-y-3">
              <div className="flex items-center">
                <CreditCard className="w-5 h-5 text-blue-600 mr-3" />                                                               
                <span className="text-gray-600">Plan:</span>
                <span className="ml-2 font-medium text-gray-900">{tenant.subscriptionTier}</span>                                   
              </div>
              <div className="flex items-center">
                <Calendar className="w-5 h-5 text-blue-600 mr-3" />                                                                 
                <span className="text-gray-600">Next billing:</span>                                                                
                <span className="ml-2 font-medium text-gray-900"> 
                  {new Date(tenant.nextBillingDate).toLocaleDateString()}                                                           
                </span>
              </div>
              <div className="flex items-center">
                <div className="w-5 h-5 bg-yellow-100 rounded-full flex items-center justify-center mr-3">
                  <svg className="w-3 h-3 text-yellow-600" fill="currentColor" viewBox="0 0 20 20">
                    <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                  </svg>
                </div>
                <span className="text-gray-600">Status:</span>
                <span className="ml-2 font-medium text-yellow-600">Pending Approval</span>                                   
              </div>
            </div>
          </motion.div>
        )}

        <motion.div
          initial={{ y: 20, opacity: 0 }}
          animate={{ y: 0, opacity: 1 }}
          transition={{ delay: 0.6 }}
          className="space-y-4"
        >
          <div className="bg-blue-50 border border-blue-200 rounded-xl p-4">                                                        
            <h4 className="font-semibold text-blue-900 mb-2">What's Next?</h4>
            <ul className="text-sm text-blue-800 space-y-1">
              <li> Complete mobile verification to activate your account</li>
              <li> Wait for admin approval (usually within 24 hours)</li>
              <li> You'll receive an email when approved</li>
              <li> Once approved, you can access your partner dashboard</li>
            </ul>
          </div>

          <div className="flex flex-col sm:flex-row gap-4">       
            <button
              onClick={() => router.push('/auth/verify-mobile')}
              className="flex-1 bg-blue-600 text-white text-center py-3 px-6 rounded-xl font-semibold hover:bg-blue-700 transition-colors duration-200"
            >
              Verify Mobile
            </button>
            <Link
              href="/partner"
              className="flex-1 bg-gray-100 text-gray-700 text-center py-3 px-6 rounded-xl font-semibold hover:bg-gray-200 transition-colors duration-200"                                            
            >
              Learn More
            </Link>
          </div>
        </motion.div>
      </motion.div>
    </div>
  );
}
